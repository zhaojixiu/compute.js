compute.js
版本：v1.0.0
作者：落木萧萧


非模块化使用方法

在使用js进行浮点型数值计算的时候，会出现数据计算不准确的情况，比如：
console.log( 0.1 + 0.2 );  //输出 0.30000000000000004 
console.log( 0.3 - 0.1 );  //输出 0.19999999999999998

其原因是在有限的存储空间下，绝大部分的十进制小数都不能用二进制浮点数来精确表示。

此compute.js插件  专为解决此类问题而诞生   能够准确的进行“加减乘除”计算，并提供精确的四舍五入


1: 引入compute.js
	<script src="compute.js" type="text/javascript" charset="utf-8"></script>
	  
2: 加减乘除使用方法：
	调用Compute方法，传入3个参数。第一个参数为操作数1，第二个参数为操作数2，第三个参数为操作符（'+'、'-'、'*'、'/'）
      	加: Compute(0.3, 0.2, '+')
      	减: Compute(0.3, 0.2, '-')
      	乘: Compute(0.3, 0.2, '*')
      	除: Compute(0.3, 0.2, '/')
3: 四舍五入使用方法：
	调用Round方法，传入2个参数。第一个参数为操作数，第二个参数为要保留的小数点位数
	Round(0.988745,2)  //0.99
4: 科学计数法转字符串使用方法：
	调用noExponent方法，传入1个参数。科学计数法
	noExponent(1.53181336e-10)  //'0.000000000153181336'
